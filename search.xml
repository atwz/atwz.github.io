<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/09/10/ai-ti-xiao-zi-mysql-ji-ben-cao-zuo-shou-ce/"/>
      <url>/2019/09/10/ai-ti-xiao-zi-mysql-ji-ben-cao-zuo-shou-ce/</url>
      
        <content type="html"><![CDATA[<hr><p>title: 二零一七年终总结<br>date: 2018-01-22 12:32:09<br>top: false<br>cover: false<br>password:<br>toc: true<br>mathjax: false<br>summary: 时间过得很快，终于等到放寒假了，虽然这几个月没有课，天天和放假也没啥区别呢。细数一下，还有5个月就要毕业了吧，大一刚入学的场景却依然清楚地记得，转眼间就成了老学长了呢。闲来无事，随便写写，有感而发，无病呻吟而已。<br>tags:</p><ul><li>随笔<br>categories:</li><li>随笔</li></ul><hr><h4 id="一、库操作"><a href="#一、库操作" class="headerlink" title="一、库操作"></a>一、库操作</h4><p>查看：</p><pre class="line-numbers language-MySQL"><code class="language-MySQL">-- 展示所有数据库SHOW DATABASES;-- 查看表结构desc table_name;-- 查看生成表的SQLshow create table table_name;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建：</p><pre><code>//创建数据库涉及字符集、排序规则知识，后续介绍CREATE DATABASE 数据库名;CREATE DATABASE IF NOT EXISTS 数据库名 DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</code></pre><p>使用：</p><pre><code>USE 数据库名;注意：使用之后不能对其他数据库以及其他的数据中的数据表操作，只能对自身数据库操作提示：可以使用 SHOW DATABASES 返回到根目录下 进行对其他数据库的操作</code></pre><p>删除：</p><pre><code>DROP DATABASE 数据库名;</code></pre><h4 id="二、表操作"><a href="#二、表操作" class="headerlink" title="二、表操作"></a>二、表操作</h4><p>查看：</p><pre><code>//查看当前数据库下所有表名show tables;//查看表所有内容select * from 表名;             </code></pre><p>创建：</p><pre><code>命令：CREATE TABLE table_name (column_name column_type);案例：CREATE TABLE `sys_role` (  `role_id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#39;角色ID&#39;,  `role_name` varchar(30) NOT NULL COMMENT &#39;角色名称&#39;,  `role_key` varchar(100) NOT NULL COMMENT &#39;角色权限字符串&#39;,  `role_sort` int(4) NOT NULL COMMENT &#39;显示顺序&#39;,  `data_scope` char(1) DEFAULT &#39;1&#39; COMMENT &#39;数据范围（1：全部数据权限 2：自定数据权限）&#39;,  `status` char(1) NOT NULL COMMENT &#39;角色状态（0正常 1停用）&#39;,  `del_flag` char(1) DEFAULT &#39;0&#39; COMMENT &#39;删除标志（0代表存在 2代表删除）&#39;,  `create_by` varchar(64) DEFAULT &#39;&#39; COMMENT &#39;创建者&#39;,  `create_time` datetime DEFAULT NULL COMMENT &#39;创建时间&#39;,  `update_by` varchar(64) DEFAULT &#39;&#39; COMMENT &#39;更新者&#39;,  `update_time` datetime DEFAULT NULL COMMENT &#39;更新时间&#39;,  `remark` varchar(500) DEFAULT NULL COMMENT &#39;备注&#39;,  PRIMARY KEY (`role_id`)) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT=&#39;角色信息表&#39;;</code></pre><p>删除：</p><pre><code>// 删除内容和定义，释放空间。简单来说就是把整个表去掉.以后要新增数据是不可能的,除非新增一个表。drop table 表名</code></pre><p>清空：</p><pre><code>//删除内容、释放空间但不删除定义，也就是数据表的结构还在。与drop不同的是,它只是清空表数据而已,它比较温柔。truncate table 表名//删除内容不删除定义，不释放空间。其中，delete table tb 虽然也是删除整个表的数据,但是过程是痛苦的(系统一行一行地删,效率较truncate低)。delete from 表名</code></pre><p>修改：</p><pre><code>添加列：   alter table 表名 add 列名 类型删除列：   alter table 表名 drop column 列名修改列：alter table 表名 modify column 列名 类型;  -- 类型alter table 表名 change 原列名 新列名 类型; -- 列名，类型</code></pre><h4 id="三、表内容操作"><a href="#三、表内容操作" class="headerlink" title="三、表内容操作"></a>三、表内容操作</h4><p>增加：</p><pre><code>命令:insert into 表 (列名,列名...) values (值,值,...)insert into 表 (列名,列名...) values (值,值,...),(值,值,值...)insert into 表 (列名,列名...) select (列名,列名...) from 表案例：insert into tab1(name,email) values(&#39;Aiti&#39;,&#39;aitixiaozi@163.com&#39;)</code></pre><p>删除：</p><pre><code>delete from 表                                      # 删除表里全部数据delete from 表 where id＝1 and name＝&#39;Aiti&#39;   # 删除ID =1 和name=&#39;Aiti&#39; 那一行数据</code></pre><p>修改：</p><pre><code>update 表 set name ＝ &#39;Aiti&#39; where id&gt;1</code></pre><p>查看：</p><pre><code>select * from 表select * from 表 where id &gt; 1select id,name,sex from 表 where id &gt; 1</code></pre><h4 id="四、复合条件语句"><a href="#四、复合条件语句" class="headerlink" title="四、复合条件语句"></a>四、复合条件语句</h4><p>1、条件判断where</p><pre><code>select * from 表 where id &gt; 1 and name != &#39;Aiti&#39; and num = 10;select * from 表 where id between 10 and 200;select * from 表 where id in (100,200,300)select * from 表 where id not in (100,200,300)select * from 表 where id in (select uid from 表)</code></pre><p>2、通配符like</p><pre><code>// Liu开头的所有（多个字符串）select * from 表 where name like &#39;Liu%&#39;  // Liu开头的所有（一个字符）select * from 表 where name like &#39;Liu_&#39; </code></pre><p>3、限制limit</p><pre><code>select * from 表 limit 5;             - 前5行select * from 表 limit 10,5;          - 从第10行开始的5行select * from 表 limit 5 offset 10    - 从第10行开始的5行</code></pre><p>4、排序asc，desc</p><pre><code>select * from 表 order by 列 asc              - 根据 “列” 从小到大排列select * from 表 order by 列 desc             - 根据 “列” 从大到小排列select * from 表 order by 列1 desc,列2 asc    - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序</code></pre><p>5、分组group by</p><pre><code>select num from 表 group by numselect num,id from 表 group by num,idselect num,id from 表  where id &gt; 50 group by num,id order id descselect num,id,count(*),sum(score),max(score),min(score) from 表 group by num,idselect num from 表 group by num having max(id) &gt; 50// 注意：group by 必须在where之后，order by之前。// WHERE 搜索条件在进行分组操作之前应用；而 HAVING 搜索条件在进行分组操作之后应用。</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>二零一七年终总结</title>
      <link href="/2018/01/22/2017-conclusion/"/>
      <url>/2018/01/22/2017-conclusion/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66"></iframe></div><p>时间过得很快，终于等到放寒假了，虽然这几个月没有课，天天和放假也没啥区别呢。细数一下，还有5个月就要毕业了吧，大一刚入学的场景却依然清楚地记得，转眼间就成了老学长了呢。闲来无事，随便写写，有感而发，无病呻吟而已。</p><h1 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h1><hr><p>回顾我的2017，没做什么事，令我能记得就3件大事吧：</p><ul><li>失恋ing</li><li>ACM退役</li><li>顺利保研</li></ul><p><strong>第一件事</strong>就不想过多回忆了，<strong>2014.12.13 ~ 2017.03.01</strong>，曲终人散。<br><img src="749826.jpg" alt><br>最后引用《我的少女时代》里的一句话吧。</p><blockquote><p>每人都有一颗林真心，遇见是最美好的小幸运，谢谢你出现在我的青春里。</p></blockquote><p><img src="1.jpg" alt><br><strong>第二件事</strong>其实也是黯淡退出吧，大三下开始课程繁忙，也就没怎么训练了，再加上暑假考驾照，于是乎就退役了。回顾三年来，从大一入学时电脑都没怎么碰过的小白，到现在算法也略有所知，也是付出过很大的努力吧，毕竟当年每天刷题，为了一个bug而熬夜到凌晨。最后也算是混了个水水的金牌，奖项不算耀眼。但最重要的是从这段经历中，学到了拼搏、坚持的一种精神，这对以后的研究生涯想必也有很大帮助。<br><img src="2.jpg" alt><br><strong>第三件事</strong>也是意料之中吧，没有什么波折。纠结了很多，虽然<strong>专业第一</strong>，但是最后还是选择保了本校。要问原因，也许是校园情怀，也许是导师人很好，也许是为了方便更早研究，也许就是懒吧。现在尘埃落定，靠人靠天不如靠自己，继续努力吧。<br><img src="3.jpg" alt></p><p>过去的一年，学业未有很大长进，看着同学们整页的4.0绩点，心里倒也没有什么不平衡了。下学期保了研之后选了一门研究生的文本挖掘课，也马马虎虎读了几十篇论文，也算是对自然语言处理和深度学习入了个门，最后的presentation做的还算满意。</p><h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h1><hr><p>今年最重要的大事莫过于毕业论文了，因为以后要做的方向是句法分析，所以导师给我的毕业论文安排的就是《基于循环神经网络的成分句法分析》。虽然说是基于ACL2013的一篇论文改编的，但是目前为止，我还没有发现有人做和这个完全一样的。也许最后写的好的话可以直接发paper了。</p><p>但是目前基本的框架还没完全搭建起来吧，代码还不是很熟练，现在只写了一个最基础的动态规划+RNN。最近有如下计划：</p><ul><li>准备试一下动态规划+LSTM。</li><li>然后动态规划扩增一个维度，用来保存左右结点的head结点。</li><li>如果这个写好了，就可以和我github找到的PCFG+CYK代码融合了，准备加上每个结点的POS。</li><li>最后加入预训练词向量应该就基本完成了。</li></ul><p>希望能顺利毕业吧，前一段时间一直对一些实现细节有些困惑，代码还写错了，还以为理论错了。也不知道最后出来的结果会怎么样，希望能不错。</p><p>生活方面，最近半年越来越懒了，极少出门，睡得晚，起的也晚。最近买了把尤克里里，也算是陶冶陶冶情操吧，不至于一直盯着电脑。现在也小有长进，能弹一点点了。</p><p>现在能聊天的人越来越少了，QQ微信放那一天也不一定会有人来找，就算有人也多半是咨询问题的，等一个可以交心的人吧。有时我也想过，我是不是太像中央空调了，对所有人都这么有耐心，到头来却还是一个人，付出那么多最后还是一无所有。<br><img src="4.jpg" alt><br>最后还是祝自己2018年顺利吧，希望毕业顺利，研究生涯小有收获，最后等一个有缘人吧。</p><blockquote><p>我遇见谁，会有怎样的对白。<br>我等的人，她在多远的未来。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
