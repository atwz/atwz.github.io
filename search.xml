<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>挨踢小子MySQL筆記手冊整理</title>
      <link href="/2018/01/22/ai-ti-xiao-zi-mysql-ji-ben-cao-zuo-shou-ce/"/>
      <url>/2018/01/22/ai-ti-xiao-zi-mysql-ji-ben-cao-zuo-shou-ce/</url>
      
        <content type="html"><![CDATA[<h4 id="一、库操作"><a href="#一、库操作" class="headerlink" title="一、库操作"></a>一、库操作</h4><p>查看：</p><pre><code>-- 展示所有数据库SHOW DATABASES;-- 查看表结构desc table_name;-- 查看生成表的SQLshow create table table_name;</code></pre><p>创建：</p><pre><code>//创建数据库涉及字符集、排序规则知识，后续介绍CREATE DATABASE 数据库名;CREATE DATABASE IF NOT EXISTS 数据库名 DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</code></pre><p>使用：</p><pre><code>USE 数据库名;注意：使用之后不能对其他数据库以及其他的数据中的数据表操作，只能对自身数据库操作提示：可以使用 SHOW DATABASES 返回到根目录下 进行对其他数据库的操作</code></pre><p>删除：</p><pre><code>DROP DATABASE 数据库名;</code></pre><h4 id="二、表操作"><a href="#二、表操作" class="headerlink" title="二、表操作"></a>二、表操作</h4><p>查看：</p><pre><code>//查看当前数据库下所有表名show tables;//查看表所有内容select * from 表名;             </code></pre><p>创建：</p><pre><code>命令：CREATE TABLE table_name (column_name column_type);案例：CREATE TABLE `sys_role` (  `role_id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#39;角色ID&#39;,  `role_name` varchar(30) NOT NULL COMMENT &#39;角色名称&#39;,  `role_key` varchar(100) NOT NULL COMMENT &#39;角色权限字符串&#39;,  `role_sort` int(4) NOT NULL COMMENT &#39;显示顺序&#39;,  `data_scope` char(1) DEFAULT &#39;1&#39; COMMENT &#39;数据范围（1：全部数据权限 2：自定数据权限）&#39;,  `status` char(1) NOT NULL COMMENT &#39;角色状态（0正常 1停用）&#39;,  `del_flag` char(1) DEFAULT &#39;0&#39; COMMENT &#39;删除标志（0代表存在 2代表删除）&#39;,  `create_by` varchar(64) DEFAULT &#39;&#39; COMMENT &#39;创建者&#39;,  `create_time` datetime DEFAULT NULL COMMENT &#39;创建时间&#39;,  `update_by` varchar(64) DEFAULT &#39;&#39; COMMENT &#39;更新者&#39;,  `update_time` datetime DEFAULT NULL COMMENT &#39;更新时间&#39;,  `remark` varchar(500) DEFAULT NULL COMMENT &#39;备注&#39;,  PRIMARY KEY (`role_id`)) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT=&#39;角色信息表&#39;;</code></pre><p>删除：</p><pre><code>// 删除内容和定义，释放空间。简单来说就是把整个表去掉.以后要新增数据是不可能的,除非新增一个表。drop table 表名</code></pre><p>清空：</p><pre><code>//删除内容、释放空间但不删除定义，也就是数据表的结构还在。与drop不同的是,它只是清空表数据而已,它比较温柔。truncate table 表名//删除内容不删除定义，不释放空间。其中，delete table tb 虽然也是删除整个表的数据,但是过程是痛苦的(系统一行一行地删,效率较truncate低)。delete from 表名</code></pre><p>修改：</p><pre><code>添加列：   alter table 表名 add 列名 类型删除列：   alter table 表名 drop column 列名修改列：alter table 表名 modify column 列名 类型;  -- 类型alter table 表名 change 原列名 新列名 类型; -- 列名，类型</code></pre><h4 id="三、表内容操作"><a href="#三、表内容操作" class="headerlink" title="三、表内容操作"></a>三、表内容操作</h4><p>增加：</p><pre><code>命令:insert into 表 (列名,列名...) values (值,值,...)insert into 表 (列名,列名...) values (值,值,...),(值,值,值...)insert into 表 (列名,列名...) select (列名,列名...) from 表案例：insert into tab1(name,email) values(&#39;Aiti&#39;,&#39;aitixiaozi@163.com&#39;)</code></pre><p>删除：</p><pre><code>delete from 表                                      # 删除表里全部数据delete from 表 where id＝1 and name＝&#39;Aiti&#39;   # 删除ID =1 和name=&#39;Aiti&#39; 那一行数据</code></pre><p>修改：</p><pre><code>update 表 set name ＝ &#39;Aiti&#39; where id&gt;1</code></pre><p>查看：</p><pre><code>select * from 表select * from 表 where id &gt; 1select id,name,sex from 表 where id &gt; 1</code></pre><h4 id="四、复合条件语句"><a href="#四、复合条件语句" class="headerlink" title="四、复合条件语句"></a>四、复合条件语句</h4><p>1、条件判断where</p><pre><code>select * from 表 where id &gt; 1 and name != &#39;Aiti&#39; and num = 10;select * from 表 where id between 10 and 200;select * from 表 where id in (100,200,300)select * from 表 where id not in (100,200,300)select * from 表 where id in (select uid from 表)</code></pre><p>2、通配符like</p><pre><code>// Liu开头的所有（多个字符串）select * from 表 where name like &#39;Liu%&#39;  // Liu开头的所有（一个字符）select * from 表 where name like &#39;Liu_&#39; </code></pre><p>3、限制limit</p><pre><code>select * from 表 limit 5;             - 前5行select * from 表 limit 10,5;          - 从第10行开始的5行select * from 表 limit 5 offset 10    - 从第10行开始的5行</code></pre><p>4、排序asc，desc</p><pre><code>select * from 表 order by 列 asc              - 根据 “列” 从小到大排列select * from 表 order by 列 desc             - 根据 “列” 从大到小排列select * from 表 order by 列1 desc,列2 asc    - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序</code></pre><p>5、分组group by</p><pre><code>select num from 表 group by numselect num,id from 表 group by num,idselect num,id from 表  where id &gt; 50 group by num,id order id descselect num,id,count(*),sum(score),max(score),min(score) from 表 group by num,idselect num from 表 group by num having max(id) &gt; 50// 注意：group by 必须在where之后，order by之前。// WHERE 搜索条件在进行分组操作之前应用；而 HAVING 搜索条件在进行分组操作之后应用。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筆記 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>挨踢小子SQL常用笔记整理</title>
      <link href="/2018/01/22/ai-ti-xiao-zi-sql-chang-yong-bi-ji-zheng-li/"/>
      <url>/2018/01/22/ai-ti-xiao-zi-sql-chang-yong-bi-ji-zheng-li/</url>
      
        <content type="html"><![CDATA[<h4 id="1、复制数据库表数据操作"><a href="#1、复制数据库表数据操作" class="headerlink" title="1、复制数据库表数据操作"></a>1、复制数据库表数据操作</h4><pre><code>//微信公众号：关注挨踢小子 1、如果是整个表复制表达如下：insert into table1 select  * from table22、如果是有选择性的复制数据表达如下：insert into table1(column1,column2,column3...) select column1,column2,colunm3...from table23、一个数据库中的表中的数据复制到另一个数据库中的一个表，使用方法如下：insert into 数据库A.dbo.table1(col1,col2,col3...) select col1,col2,col3... from 数据库B.dbo.table2 4、直接复制现有表重命名CREATE  TABLE 表名  AS SELECT 语句；</code></pre><h4 id="2、sql的子查询可以放到查询字段之中"><a href="#2、sql的子查询可以放到查询字段之中" class="headerlink" title="2、sql的子查询可以放到查询字段之中"></a>2、sql的子查询可以放到查询字段之中</h4><pre><code>//微信公众号：关注挨踢小子 select  name,age,(select date from tableB)from tableA  where age=&quot;12&quot;；</code></pre><h4 id="3、一张表中两个字段值互换（重点思想）"><a href="#3、一张表中两个字段值互换（重点思想）" class="headerlink" title="3、一张表中两个字段值互换（重点思想）"></a>3、一张表中两个字段值互换（重点思想）</h4><pre><code>//微信公众号：关注挨踢小子 update table a, table b set a.filed1= b.field2, a.field2= b.field1where a.id = b.id</code></pre><h4 id="4、实现数据库两列数据的上下移动操作"><a href="#4、实现数据库两列数据的上下移动操作" class="headerlink" title="4、实现数据库两列数据的上下移动操作"></a>4、实现数据库两列数据的上下移动操作</h4><pre><code>//微信公众号：关注挨踢小子 update test set priority=   (case when id=1  then    (select priority from test where id=2)    when id=2 then    (select priority from test where id=1) end)    where id=1 or id=2; </code></pre><h4 id="5、mysql合并字符串"><a href="#5、mysql合并字符串" class="headerlink" title="5、mysql合并字符串"></a>5、mysql合并字符串</h4><pre><code>//微信公众号：关注挨踢小子 concat(string1,string2,string3,…)select concat( &#39;1&#39;, &#39;01&#39;,&#39;02&#39;)// 10102  concat_ws(separator,str1,str2,...)select concat_ws(&#39;-&#39;,&#39;1&#39;,&#39;2&#39;,&#39;3&#39;)// 1-2-3group_concat()group_concat( [distinct] 要连接的字段 [order by 排序字段 asc/desc ] [separator &#39;分隔符&#39;] )// 例如：SELECT  group_concat(content  ORDER BY id DESC separator &#39;-&#39;) from t_noteinfo </code></pre><h4 id="6、删除重复数据，只保留最小ID编号"><a href="#6、删除重复数据，只保留最小ID编号" class="headerlink" title="6、删除重复数据，只保留最小ID编号"></a>6、删除重复数据，只保留最小ID编号</h4><pre><code>delete tablename where id not in(select min(id) from tablename group by name,………………)</code></pre><h4 id="7、两张关联表，删除主表中已经在副表中没有的信息"><a href="#7、两张关联表，删除主表中已经在副表中没有的信息" class="headerlink" title="7、两张关联表，删除主表中已经在副表中没有的信息"></a>7、两张关联表，删除主表中已经在副表中没有的信息</h4><pre><code>delete from info where not exists (select * from infobz where info.infid=infobz.infid)</code></pre><h4 id="8、日程安排提前五分钟提醒（日期操作）"><a href="#8、日程安排提前五分钟提醒（日期操作）" class="headerlink" title="8、日程安排提前五分钟提醒（日期操作）"></a>8、日程安排提前五分钟提醒（日期操作）</h4><pre><code>select * from 日程安排 where datediff(&#39;minute&#39;,f 开始时间,getdate())&gt;5</code></pre><h4 id="9、查询出每门课都大于90-分的学生姓名"><a href="#9、查询出每门课都大于90-分的学生姓名" class="headerlink" title="9、查询出每门课都大于90 分的学生姓名"></a>9、查询出每门课都大于90 分的学生姓名</h4><pre><code>select name from table group by name having min(fenshu)&gt;90</code></pre><h4 id="10、数据结构转换形式"><a href="#10、数据结构转换形式" class="headerlink" title="10、数据结构转换形式"></a>10、数据结构转换形式</h4><pre><code>//微信公众号：关注挨踢小子原表数据结构 year   month amount 1991   1     1.1 1991   2     1.2 1991   3     1.3 1991   4     1.4 1992   1     2.1 1992   2     2.2 1992   3     2.3 1992   4     2.4查成这样一个结果 year m1   m2   m3   m4 1991 1.1 1.2 1.3 1.4 1992 2.1 2.2 2.3 2.4select year,     (select amount from   aaa m where month=1   and m.year=aaa.year) as m1,    (select amount from   aaa m where month=2   and m.year=aaa.year) as m2,    (select amount from   aaa m where month=3   and m.year=aaa.year) as m3,    (select amount from   aaa m where month=4   and m.year=aaa.year) as m4from aaa   group by year</code></pre><h4 id="11、find-in-set笔记学习（历史文章有详解，此处略）"><a href="#11、find-in-set笔记学习（历史文章有详解，此处略）" class="headerlink" title="11、find_in_set笔记学习（历史文章有详解，此处略）"></a>11、find_in_set笔记学习（历史文章有详解，此处略）</h4><pre><code>SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (102,ancestors) </code></pre><h4 id="12、explain查看sql的具体的执行计划-历史文章有详解，此处略"><a href="#12、explain查看sql的具体的执行计划-历史文章有详解，此处略" class="headerlink" title="12、explain查看sql的具体的执行计划(历史文章有详解，此处略)"></a>12、explain查看sql的具体的执行计划(历史文章有详解，此处略)</h4><pre><code>//微信公众号：关注挨踢小子explain select * from tablename</code></pre>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
